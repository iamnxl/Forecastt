
@{
    ViewBag.Title = "JSON";
    string logout = "Welcome " + ViewBag.login;
}
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }

    #chartdiv2 {
        width: 100%;
        height: 500px;
    }
</style>

<script src="https://www.amcharts.com/lib/4/core.js"></script>
<script src="https://www.amcharts.com/lib/4/charts.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>



<script>
    $(document).ready(ajaxCall1, setInterval(ajaxCall1, 60000));

    function ajaxCall1() {
        $.ajax({
            type: "POST",
            contentType: false,
            url: "test",
            data: "{}",
            dataType: 'json',
            success: function (Result) {
                
                var data = [];
                for (var i in Result) {
                    data.push({ date: new Date(Result[i].Date), value: Result[i].Value });
                }

                DreawChart(data);
            },
            error: function (Result) {
                alert("Error");
            }
        });
        $.ajax({
            type: "POST",
            contentType: false,
            url: "test2",
            data: "{}",
            dataType: 'json',
            success: function (Result) {
                var data1 = [];
                var arr1 = Result.history;
                var arr2 = Result.forecast;
                for (var i = 0; i < arr1.length;i++) {
                    data1.push({ hisDate: new Date(arr1[i].hisDate), hValue: arr1[i].hValue, hCost: arr1[i].hCost, cstk: arr1[i].cstk, gValue: arr1[i].gValue,foreDate: null, fValue: null, gFValue: null});
                    if (i == arr1.length - 1) {
                        var dateTemp = new Date(arr1[i].hisDate);
                        dateTemp.setDate(dateTemp.getDate() + 1);
                        dateTemp.setHours(0, 10, 0, 0);
                        data1.push({ hisDate: dateTemp, hValue: null, hCost: null, cstk: arr1[i].cstk, gValue: null, foreDate: null, fValue: null, gFValue: null });
                    }
                }
                for (var i = 0; i < arr2.length;i++) {
                    data1.push({hisDate:null, hValue:null,hCost:null,cstk:null,gValue:null, foreDate: new Date(arr2[i].foreDate), fValue: arr2[i].fValue>0?arr2[i].fValue:0, gFValue: arr2[i].gFValue>0?arr2[i].gFValue:0});

                }
                console.log(data1);
                //DrawPie(data1);
            },
            error: function (Result) {
                alert("Error");
            }
        });
    }


    function DreawChart(dataIn) {
        am4core.ready(function () {

            // Themes begin
            //am4core.useTheme(am4themes_animated);
            // Themes end

            var chart = am4core.create("chartdiv", am4charts.XYChart);
            var label = chart.createChild(am4core.Label);
            label.text = "Forecast";
            label.fontSize = 25;
            label.align = "center";
            label.isMeasured = false;
            label.x = 110;
            label.y = 45;

            var data = [];

            chart.data = dataIn;

            // Create axes
            var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
            dateAxis.title.text = "Time";
            dateAxis.title.fontWeight = "bold";
            dateAxis.renderer.minGridDistance = 60;

            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.title.text = "MW";
            valueAxis.title.fontWeight = "bold";

            // Create series
            var series = chart.series.push(new am4charts.LineSeries());
            series.dataFields.valueY = "value";
            series.dataFields.dateX = "date";
            series.tooltipText = "{date}:{value}";
            series.tooltip.pointerOrientation = "vertical";

            chart.cursor = new am4charts.XYCursor();
            chart.cursor.snapToSeries = series;
            chart.cursor.xAxis = dateAxis;

            //chart.scrollbarY = new am4core.Scrollbar();
            chart.scrollbarX = new am4core.Scrollbar();

        }); // end am4core.ready()
    }

    function DrawPie(dataIn) {
        am4core.ready(function () {

            // Themes begin
            //am4core.useTheme(am4themes_animated);
            // Themes end

            var chart = am4core.create("chartdiv2", am4charts.XYChart);
            chart.legend = new am4charts.Legend();
            chart.legend.maxWidth = undefined;
            //chart.dateFormatter.dateFormat = "d MMM H:m";
            var data = [];

            chart.data = dataIn;

            // Create axes
            var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
            dateAxis.title.text = "Time";
            dateAxis.title.fontWeight = "bold";


            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.title.text = "MW";
            valueAxis.title.fontWeight = "bold";
            valueAxis.renderer.line.strokeOpacity = 1;
            valueAxis.renderer.line.strokeWidth = 2;
            valueAxis.max = dataIn[0].cstk*1.3; 

            var ghiAxis = chart.yAxes.push(new am4charts.ValueAxis());

            ghiAxis.title.text = "kWh/m2";
            ghiAxis.title.fontWeight = "bold";

            var range = valueAxis.axisRanges.create();
            range.value = dataIn[0].cstk;
            range.grid.stroke = am4core.color("#b8b894");
            range.grid.strokeDasharray = "12,3";
            range.grid.strokeWidth = 2;
            range.grid.strokeOpacity = 1;
            range.grid.above = true;
            range.label.inside = true;
            range.label.text = "Nameplate capacity";
            range.label.fill = range.grid.stroke;
            range.label.verticalCenter = "bottom";

            // Create series
            var series = chart.series.push(new am4charts.LineSeries());
            series.stroke = am4core.color("#ff0000");
            series.strokeWidth = 3;
            series.dataFields.valueY = "hValue";
            series.dataFields.dateX = "hisDate";
            series.name = "Cost";
            series.tooltipText = "Actual Capacity: {hValue} MW\n{name}: {hCost}%";
            series.tooltip.pointerOrientation = "vertical";
            series.legendSettings.labelText = "[bold {color}]Actual capacity[/]";

            var series2 = chart.series.push(new am4charts.LineSeries());
            series2.name = "Forecast capacity";
            series2.stroke = am4core.color("#ff0000");
            series2.strokeDasharray = "12,3";
            series2.strokeWidth = 3;
            series2.tooltipText = "{name}: {fValue}MW";
            series2.tooltip.pointerOrientation = "vertical";
            series2.dataFields.valueY = "fValue";
            series2.dataFields.dateX = "foreDate";
            series2.legendSettings.labelText = "[bold {color}]Forecast capacity[/]";

            var series3 = chart.series.push(new am4charts.LineSeries());
            series3.strokeWidth = 3;
            series3.dataFields.valueY = "gValue";
            series3.dataFields.dateX = "hisDate";
            series3.name = "Actual GHI";
            series3.tooltipText = "{name}: {gValue}(kWh/m2)";
            series3.tooltip.pointerOrientation = "vertical";
            series3.legendSettings.labelText = "[bold {color}]Actual GHI[/]";
            series3.yAxis = ghiAxis;

            var series4 = chart.series.push(new am4charts.LineSeries());
            series4.strokeDasharray = "12,3";
            series4.strokeWidth = 3;
            series4.dataFields.valueY = "gFValue";
            series4.dataFields.dateX = "foreDate";
            series4.name = "Forecast GHI";
            series4.tooltipText = "{name}: {gFValue}(kWh/m2)";
            series4.tooltip.pointerOrientation = "vertical";
            series4.legendSettings.labelText = "[bold {color}]Forecast GHI[/]";
            series4.yAxis = ghiAxis;

            chart.cursor = new am4charts.XYCursor();
            chart.cursor.xAxis = dateAxis;

            ghiAxis.renderer.line.strokeOpacity = 1;
            ghiAxis.renderer.line.strokeWidth = 2;
            ghiAxis.renderer.opposite = true;
            //chart.scrollbarY = new am4core.Scrollbar();
            //chart.scrollbarX = new am4core.Scrollbar();
        }
            )}

</script>
<div style="margin-left:1040px;font-size:large">
    @if (ViewBag.login != null)
    {
        @Html.ActionLink(logout, "LogOut","LogIn");
    }
</div>
<div id="chartdiv"></div>
<br />
<br />
<div id="chartdiv2"></div>